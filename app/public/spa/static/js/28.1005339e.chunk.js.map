{"version":3,"sources":["views/style/main.module.scss","components/Header/index.jsx","components/Aside/index.jsx","views/Main/index.jsx"],"names":["module","exports","Header","HeaderTou","state","open","this","props","routers","defaultUrl","pathUrl","split","slice","join","style","backgroundColor","className","theme","defaultSelectedKeys","lineHeight","mode","map","item","Item","key","path","to","head","localStorage","userName","onClick","set","bind","edit","setState","history","push","window","clear","Component","SubMenu","Sider","Slidebar","nav","navArr","filter","meta","name","onenav","Set","title","length","url","ite","color","textAlign","index","Content","Main","aside","children","pathname","location","brr","view","JSON","parse","routeIsVisible","findIndex","routerId","mainStyle","header","RouterView"],"mappings":"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","file":"static/js/28.1005339e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"main_root__1rlIX\",\"main\":\"main_main__3EPY4\",\"content\":\"main_content__1-oxn\",\"con\":\"main_con__UQcuv\"};","import React, { Component } from 'react'\r\nimport { Layout, Menu } from 'antd';\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./header.scss\"\r\n\r\nconst { Header } = Layout;\r\n\r\nclass HeaderTou extends Component {\r\n    state = {\r\n        open : false\r\n    }\r\n    render() {\r\n        let { open } = this.state;\r\n        let { routers, pathUrl } = this.props;\r\n        let defaultUrl = pathUrl.split('/').slice(0,3).join('/');\r\n        return (\r\n            <Header style={{\r\n                backgroundColor: '#2b5295'\r\n            }}\r\n            >\r\n                <div className=\"logo\"></div>\r\n                <Menu theme=\"dark\"\r\n                    defaultSelectedKeys={[defaultUrl]}\r\n                    style={{\r\n                        lineHeight: '64px',\r\n                        backgroundColor: '#2b5295'\r\n                    }}\r\n                    mode=\"horizontal\"\r\n                >\r\n                    {\r\n                        routers.map(item => <Menu.Item key={item.path}>\r\n                            <Link to={item.path}>{item.head}</Link>\r\n                        </Menu.Item>)\r\n                    }\r\n                </Menu>\r\n                <div className=\"username\">\r\n                    <span>{localStorage.userName}</span>\r\n                    <span onClick={this.set.bind(this)}>\r\n                        通知栏\r\n                    </span>\r\n                    {open && <div className=\"set\">\r\n                        <p>设置</p>\r\n                        <p onClick={this.edit.bind(this)}>退出</p>\r\n                    </div>}\r\n                </div>\r\n            </Header>\r\n        )\r\n    }\r\n    set(){\r\n        let { open } = this.state;\r\n        this.setState({\r\n            open:!open\r\n        })\r\n    }\r\n    edit(){\r\n        this.props.props.history.push(\"/login\")\r\n        window.localStorage.clear()\r\n    }\r\n}\r\n\r\n\r\nexport default HeaderTou;\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Layout, Menu } from 'antd';\r\nconst { SubMenu } = Menu;\r\n\r\nconst { Sider } = Layout;\r\n\r\nclass Slidebar extends Component {\r\n    render() {\r\n        let { nav, pathUrl } = this.props;\r\n        let navArr = nav.filter(item => item.meta.name)\r\n        let onenav = [...new Set(navArr.map(item => item.meta.title))];\r\n        nav = navArr.length ? onenav.map(item => ({\r\n            title: item,\r\n            url: navArr.filter(ite => ite.meta.title === item)\r\n        })) : nav;\r\n        return (\r\n            <Sider style={{\r\n                backgroundColor: '#c5cfea',\r\n                color: '#5c6f99'\r\n            }}\r\n            >\r\n                {pathUrl.split('/').length > 3 && <Menu style={{\r\n                    textAlign: 'center',\r\n                    backgroundColor: '#c5cfea'\r\n                }}\r\n                    mode=\"inline\"\r\n                    defaultSelectedKeys={[pathUrl]}\r\n                >\r\n                    {\r\n                        nav && nav.map((item, index) => {\r\n                            if (item.title) {\r\n                                return <SubMenu key={index} title={\r\n                                    <span>\r\n                                        <span>{item.title}</span>\r\n                                    </span>\r\n                                }\r\n                                >\r\n                                    {\r\n                                        item.url.map((ite) => <Menu.Item key={ite.path}>\r\n                                            <Link to={ite.path}>{ite.meta.name}</Link>\r\n                                        </Menu.Item>)\r\n                                    }\r\n                                </SubMenu>\r\n                            } else {\r\n                                return item.url ? item.url.map((ite) => <Menu.Item key={ite.path}>\r\n                                    <Link to={ite.path}>{ite.meta.name}</Link>\r\n                                </Menu.Item>) : <Menu.Item key={item.path}>\r\n                                        <Link to={item.path}>{item.meta.title}</Link>\r\n                                    </Menu.Item>\r\n                            }\r\n                        })\r\n                    }\r\n                </Menu>\r\n                }\r\n            </Sider>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Slidebar;\r\n","import React, { Component } from 'react'\r\nimport Header from \"@/components/Header/\"\r\nimport Slidebar from \"@/components/Aside/\"\r\nimport RouterView from \"@/router/RouterView\"\r\nimport mainStyle from \"../style/main.module.scss\"\r\nimport { Layout } from 'antd'\r\nimport { aside, header } from \"../../router/stair\"\r\nconst { Content } = Layout;\r\nclass Main extends Component {\r\n    state = {\r\n        aside: [],\r\n        children: [],\r\n        pathUrl:''\r\n    }\r\n    render() {\r\n        let { location: { pathname }, children } = this.props;\r\n        let {pathUrl} = this.state;\r\n        let brr = []\r\n        if (!window.localStorage.view) {\r\n            this.props.history.push(\"/login\")\r\n            return \"\"\r\n        } else {\r\n            brr = JSON.parse(window.localStorage.view)\r\n        }\r\n        let path = this.props.location.pathname.split(\"/\")[2];\r\n        let authority = brr.filter(item=>item.routeIsVisible);\r\n        let ind = authority.findIndex(item=>item.routerId === path)\r\n        if(ind === -1){\r\n            this.props.history.push(\"/main/home\")\r\n        }\r\n        return (\r\n            <Layout className={mainStyle['main']}>\r\n                <Header routers={header(brr, this.props)} pathUrl={pathUrl} props={this.props}/>\r\n                <Layout className={mainStyle['content']}>\r\n                    {aside(pathname).length > 0 && <Slidebar nav={aside(pathname)} pathUrl={pathUrl} />}\r\n                    <Content className={mainStyle['con']}>\r\n                        <RouterView routers={children} />\r\n                    </Content>\r\n                </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n    static getDerivedStateFromProps(props) {\r\n        return {\r\n            pathUrl:props.location.pathname\r\n        };\r\n    }\r\n}\r\n\r\nexport default Main;\r\n"],"sourceRoot":""}